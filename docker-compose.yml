version: "3.9"

services:
  client:
    networks:
      playword:
    container_name: client-${REPOSITORY_NAME}
    image: client-${REPOSITORY_NAME}
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        HOST: ${HOST}
        CLIENT_PORT: ${CLIENT_PORT}
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - "${CLIENT_PORT}:80"
  server:
    networks:
      playword:
    depends_on:
      - postgres
    container_name: server-${REPOSITORY_NAME}
    image: server-${REPOSITORY_NAME}
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        HOST: ${HOST}
        CLIENT_PORT: ${CLIENT_PORT}
        SERVER_PORT: ${SERVER_PORT}
        DATABASE_URL: ${DATABASE_URL}
        AT_SECRET: ${AT_SECRET}
        RT_SECRET: ${RT_SECRET}
    restart: always
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      - HOST=${HOST}
      - SERVER_PORT=${SERVER_PORT}
      - CLIENT_PORT=${CLIENT_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - AT_SECRET=${AT_SECRET}
      - RT_SECRET=${RT_SECRET}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
  postgres:
    networks:
      playword:
    container_name: postgres-${REPOSITORY_NAME}
    image: postgres:14
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${POSTGRES_PATH}:/var/lib/postgresql/data

networks:
  playword:
